// automatically generated by the FlatBuffers compiler, do not modify

package com.example.cripto_photoaffix.Security.EncryptedFiles;

import com.example.cripto_photoaffix.Flatbuffers.BaseVector;
import com.example.cripto_photoaffix.Flatbuffers.ByteVector;
import com.example.cripto_photoaffix.Flatbuffers.Constants;
import com.example.cripto_photoaffix.Flatbuffers.FlatBufferBuilder;
import com.example.cripto_photoaffix.Flatbuffers.Table;
import java.nio.*;
import java.lang.*;

@SuppressWarnings("unused")
public final class EncryptedFileFBS extends Table {
  public static void ValidateVersion() { Constants.FLATBUFFERS_1_11_1(); }
  public static EncryptedFileFBS getRootAsEncryptedFileFBS(ByteBuffer _bb) { return getRootAsEncryptedFileFBS(_bb, new EncryptedFileFBS()); }
  public static EncryptedFileFBS getRootAsEncryptedFileFBS(ByteBuffer _bb, EncryptedFileFBS obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __reset(_i, _bb); }
  public EncryptedFileFBS __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public int data(int j) { int o = __offset(4); return o != 0 ? bb.get(__vector(o) + j * 1) & 0xFF : 0; }
  public int dataLength() { int o = __offset(4); return o != 0 ? __vector_len(o) : 0; }
  public ByteVector dataVector() { return dataVector(new ByteVector()); }
  public ByteVector dataVector(ByteVector obj) { int o = __offset(4); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer dataAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public ByteBuffer dataInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 4, 1); }
  public int salt(int j) { int o = __offset(6); return o != 0 ? bb.get(__vector(o) + j * 1) & 0xFF : 0; }
  public int saltLength() { int o = __offset(6); return o != 0 ? __vector_len(o) : 0; }
  public ByteVector saltVector() { return saltVector(new ByteVector()); }
  public ByteVector saltVector(ByteVector obj) { int o = __offset(6); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer saltAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public ByteBuffer saltInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 6, 1); }
  public int iv(int j) { int o = __offset(8); return o != 0 ? bb.get(__vector(o) + j * 1) & 0xFF : 0; }
  public int ivLength() { int o = __offset(8); return o != 0 ? __vector_len(o) : 0; }
  public ByteVector ivVector() { return ivVector(new ByteVector()); }
  public ByteVector ivVector(ByteVector obj) { int o = __offset(8); return o != 0 ? obj.__assign(__vector(o), bb) : null; }
  public ByteBuffer ivAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }
  public ByteBuffer ivInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 8, 1); }
  public String path() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer pathAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public ByteBuffer pathInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 10, 1); }
  public String filename() { int o = __offset(12); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer filenameAsByteBuffer() { return __vector_as_bytebuffer(12, 1); }
  public ByteBuffer filenameInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 12, 1); }
  public String type() { int o = __offset(14); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer typeAsByteBuffer() { return __vector_as_bytebuffer(14, 1); }
  public ByteBuffer typeInByteBuffer(ByteBuffer _bb) { return __vector_in_bytebuffer(_bb, 14, 1); }

  public static int createEncryptedFileFBS(FlatBufferBuilder builder,
                                           int dataOffset,
                                           int saltOffset,
                                           int ivOffset,
                                           int pathOffset,
                                           int filenameOffset,
                                           int typeOffset) {
    builder.startTable(6);
    EncryptedFileFBS.addType(builder, typeOffset);
    EncryptedFileFBS.addFilename(builder, filenameOffset);
    EncryptedFileFBS.addPath(builder, pathOffset);
    EncryptedFileFBS.addIv(builder, ivOffset);
    EncryptedFileFBS.addSalt(builder, saltOffset);
    EncryptedFileFBS.addData(builder, dataOffset);
    return EncryptedFileFBS.endEncryptedFileFBS(builder);
  }

  public static void startEncryptedFileFBS(FlatBufferBuilder builder) { builder.startTable(6); }
  public static void addData(FlatBufferBuilder builder, int dataOffset) { builder.addOffset(0, dataOffset, 0); }
  public static int createDataVector(FlatBufferBuilder builder, byte[] data) { return builder.createByteVector(data); }
  public static int createDataVector(FlatBufferBuilder builder, ByteBuffer data) { return builder.createByteVector(data); }
  public static void startDataVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static void addSalt(FlatBufferBuilder builder, int saltOffset) { builder.addOffset(1, saltOffset, 0); }
  public static int createSaltVector(FlatBufferBuilder builder, byte[] data) { return builder.createByteVector(data); }
  public static int createSaltVector(FlatBufferBuilder builder, ByteBuffer data) { return builder.createByteVector(data); }
  public static void startSaltVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static void addIv(FlatBufferBuilder builder, int ivOffset) { builder.addOffset(2, ivOffset, 0); }
  public static int createIvVector(FlatBufferBuilder builder, byte[] data) { return builder.createByteVector(data); }
  public static int createIvVector(FlatBufferBuilder builder, ByteBuffer data) { return builder.createByteVector(data); }
  public static void startIvVector(FlatBufferBuilder builder, int numElems) { builder.startVector(1, numElems, 1); }
  public static void addPath(FlatBufferBuilder builder, int pathOffset) { builder.addOffset(3, pathOffset, 0); }
  public static void addFilename(FlatBufferBuilder builder, int filenameOffset) { builder.addOffset(4, filenameOffset, 0); }
  public static void addType(FlatBufferBuilder builder, int typeOffset) { builder.addOffset(5, typeOffset, 0); }
  public static int endEncryptedFileFBS(FlatBufferBuilder builder) {
    int o = builder.endTable();
    return o;
  }
  public static void finishEncryptedFileFBSBuffer(FlatBufferBuilder builder, int offset) { builder.finish(offset); }
  public static void finishSizePrefixedEncryptedFileFBSBuffer(FlatBufferBuilder builder, int offset) { builder.finishSizePrefixed(offset); }

  public static final class Vector extends BaseVector {
    public Vector __assign(int _vector, int _element_size, ByteBuffer _bb) { __reset(_vector, _element_size, _bb); return this; }

    public EncryptedFileFBS get(int j) { return get(new EncryptedFileFBS(), j); }
    public EncryptedFileFBS get(EncryptedFileFBS obj, int j) {  return obj.__assign(__indirect(__element(j), bb), bb); }
  }
}

